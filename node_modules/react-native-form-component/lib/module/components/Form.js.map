{"version":3,"sources":["Form.tsx"],"names":["React","Children","useState","KeyboardAvoidingView","Platform","Pressable","Text","StyleSheet","containsError","colors","submitForm","Form","props","width","setWidth","opacity","setOpacity","handleButtonPress","fieldsWithError","forEach","children","child","index","ref","current","getComponent","keyboardType","isRequired","value","customValidation","validation","status","push","label","placeholder","setState","length","console","error","JSON","stringify","onButtonPress","OS","keyboardVerticalOffset","undefined","styles","button","buttonStyle","color","radius","event","nativeEvent","layout","buttonText","buttonTextStyle","create","height","justifyContent","alignItems","backgroundColor","red","borderRadius","marginVertical","fontSize","fontWeight"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAAqD,OAArD;AACA,SACEC,oBADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,IAJF,EAKEC,UALF,QAQO,cARP;AAUA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAWA,OAAO,IAAIC,UAAJ;AAIP,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA4B;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMe,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,eAAyB,GAAG,EAAlC;AACAjB,IAAAA,QAAQ,CAACkB,OAAT,CAAiBP,KAAK,CAACQ,QAAvB,EAAiC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAA;;AACjD;AACA,UAAID,KAAK,IAAI,eAAAA,KAAK,CAACE,GAAN,gFAAWC,OAAX,0EAAoBC,YAApB,OAAsC,UAAnD,EAA+D;AAC7D,cAAM;AACJC,UAAAA,YADI;AAEJC,UAAAA,UAFI;AAGJC,UAAAA,KAHI;AAIJC,UAAAA,gBAJI,CAKJ;;AALI,YAMFR,KAAK,CAACT,KANV;AAOA,YAAIkB,UAAJ;AAEA,YAAID,gBAAJ,EAAsBC,UAAU,GAAGD,gBAAgB,EAA7B;;AACtB,YAAIrB,aAAa,CAACkB,YAAD,EAAeC,UAAf,EAA2BC,KAA3B,EAAkCE,UAAlC,CAAb,CAA2DC,MAA/D,EAAuE;AAAA;;AACrEb,UAAAA,eAAe,CAACc,IAAhB,EACE;AACAX,UAAAA,KAAK,CAACT,KAAN,CAAYqB,KAAZ,IAAqBZ,KAAK,CAACT,KAAN,CAAYsB,WAAjC,IAAgD,aAAaZ,KAF/D,EADqE,CAKrE;;AACA,yBAAAD,KAAK,CAACE,GAAN,4DAAWC,OAAX,CAAmBW,QAAnB;AACD;AACF;AACF,KAtBD;;AAwBA,QAAIjB,eAAe,CAACkB,MAApB,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,KAAR,CACE,2DACEC,IAAI,CAACC,SAAL,CAAetB,eAAf,EAAgC,IAAhC,EAAsC,CAAtC,CAFJ;AAIA;AACD;;AAEDN,IAAAA,KAAK,CAAC6B,aAAN;AACD,GAnCD;;AAoCA/B,EAAAA,UAAU,GAAGO,iBAAb;AAEA,sBACE,oBAAC,oBAAD;AACE,IAAA,sBAAsB,EACpBb,QAAQ,CAACsC,EAAT,IAAe,KAAf,GAAuB9B,KAAK,CAAC+B,sBAAN,IAAgC,EAAvD,GAA4DC,SAFhE;AAIE,IAAA,QAAQ,EAAExC,QAAQ,CAACsC,EAAT,IAAe,KAAf,GAAuB,SAAvB,GAAmCE;AAJ/C,KAMGhC,KAAK,CAACQ,QANT,eAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CACLyB,MAAM,CAACC,MADF,EAEL1C,QAAQ,CAACsC,EAAT,IAAe,KAAf,GAAuB;AAAE3B,MAAAA;AAAF,KAAvB,GAAqC6B,SAFhC,EAGLhC,KAAK,CAACmC,WAHD,CADT;AAME,IAAA,OAAO,EAAE9B,iBANX;AAOE,IAAA,cAAc,EAAE;AAAE+B,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,MAAM,EAAEpC;AAA9B,KAPlB;AAQE,IAAA,QAAQ,EAAGqC,KAAD,IAAWpC,QAAQ,CAACoC,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyBvC,KAA1B,CAR/B;AASE,IAAA,SAAS,EAAE,MAAMG,UAAU,CAAC,GAAD,CAT7B;AAUE,IAAA,UAAU,EAAE,MAAMA,UAAU,CAAC,CAAD;AAV9B,kBAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC6B,MAAM,CAACQ,UAAR,EAAoBzC,KAAK,CAAC0C,eAA1B;AAAb,KACG1C,KAAK,CAACyC,UAAN,IAAoB,QADvB,CAZF,CAPF,CADF;AA0BD;AAED,MAAMR,MAAM,GAAGtC,UAAU,CAACgD,MAAX,CAAkB;AAC/BT,EAAAA,MAAM,EAAE;AACNU,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,eAAe,EAAElD,MAAM,CAACmD,GAJlB;AAKNC,IAAAA,YAAY,EAAE,CALR;AAMNC,IAAAA,cAAc,EAAE;AANV,GADuB;AAS/BT,EAAAA,UAAU,EAAE;AACVL,IAAAA,KAAK,EAAE,OADG;AAEVe,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE;AAHF;AATmB,CAAlB,CAAf","sourcesContent":["import React, { Children, useState, ReactNode } from 'react';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  Pressable,\n  Text,\n  StyleSheet,\n  TextInputSubmitEditingEventData,\n  NativeSyntheticEvent,\n} from 'react-native';\n\nimport { containsError } from './FormItem';\nimport { colors } from '../colors';\n\ninterface Props {\n  children: ReactNode;\n  keyboardVerticalOffset?: number;\n  buttonText?: string;\n  buttonStyle?: object | object[];\n  buttonTextStyle?: object | object[];\n  onButtonPress: () => void;\n}\n\nexport let submitForm: (\n  e?: NativeSyntheticEvent<TextInputSubmitEditingEventData>\n) => void;\n\nexport default function Form(props: Props) {\n  const [width, setWidth] = useState(0);\n  const [opacity, setOpacity] = useState(1);\n\n  const handleButtonPress = () => {\n    const fieldsWithError: string[] = [];\n    Children.forEach(props.children, (child, index) => {\n      //@ts-ignore\n      if (child && child.ref?.current?.getComponent() == 'FormItem') {\n        const {\n          keyboardType,\n          isRequired,\n          value,\n          customValidation,\n          //@ts-ignore\n        } = child.props;\n        let validation;\n\n        if (customValidation) validation = customValidation();\n        if (containsError(keyboardType, isRequired, value, validation).status) {\n          fieldsWithError.push(\n            //@ts-ignore\n            child.props.label || child.props.placeholder || 'FormItem' + index\n          );\n          //@ts-ignore\n          child.ref?.current.setState();\n        }\n      }\n    });\n\n    if (fieldsWithError.length) {\n      console.error(\n        'The following fields do not fulfil their conditions:\\n' +\n          JSON.stringify(fieldsWithError, null, 2)\n      );\n      return;\n    }\n\n    props.onButtonPress();\n  };\n  submitForm = handleButtonPress;\n\n  return (\n    <KeyboardAvoidingView\n      keyboardVerticalOffset={\n        Platform.OS == 'ios' ? props.keyboardVerticalOffset || 50 : undefined\n      }\n      behavior={Platform.OS == 'ios' ? 'padding' : undefined}\n    >\n      {props.children}\n      <Pressable\n        style={[\n          styles.button,\n          Platform.OS == 'ios' ? { opacity } : undefined,\n          props.buttonStyle,\n        ]}\n        onPress={handleButtonPress}\n        android_ripple={{ color: 'lightgrey', radius: width }}\n        onLayout={(event) => setWidth(event.nativeEvent.layout.width)}\n        onPressIn={() => setOpacity(0.5)}\n        onPressOut={() => setOpacity(1)}\n      >\n        <Text style={[styles.buttonText, props.buttonTextStyle]}>\n          {props.buttonText || 'Submit'}\n        </Text>\n      </Pressable>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n    borderRadius: 8,\n    marginVertical: 32,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"]}